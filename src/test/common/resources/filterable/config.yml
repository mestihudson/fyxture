# configurações gerais
common:
  # nome do padrão
  datasource: h2
  # informa onde os arquivos de fyxtures devem ser gerados
  # default: null
  auto: src/test/common/resources/filterable
  table:
    excludes: [schema_version]
    # sufixo dos arquivos .yml que contem as instancias das tabelas
    suffix: table
    # identificador das instâncias padrão das tabelas
    default: default
    # ordem em que as tabelas devem sofrer 'delete' durante clear()
    # clear:
    #   order: [AUTOR_LIVRO, LIVRO, AUTOR]
    #   excludes: [schema_version, AUTOR_LIVRO]
  verify:
    excludes: [schema_version]

# lista de datasources que podem ser utilizados em init(...)
datasource:
  h2:
    dialect: h2
    schema: PUBLIC
    driver: org.h2.Driver
    url: jdbc:h2:target/fyxture
    user: sa
    password:
    sequences:
      LIVRO: {ID: SQ_ID_LIVRO}
      AUTOR: {ID: SQ_ID_AUTOR}
    excludes: [schema_version]
    clear:

  oracle:
    dialect: oracle
    schema: FYXTURE
    driver: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@//fyxture:1521/xe
    user: fyxture
    password: fyxture
    sequences:
      LIVRO: {ID: SQ_ID_LIVRO}
      AUTOR: {ID: SQ_ID_AUTOR}

  sqlserver:
    dialect: sqlserver
    schema: dbo
    driver: net.sourceforge.jtds.jdbc.Driver
    url: jdbc:jtds:sqlserver://w7:1433/fyxture
    user: sa
    password: s3nh@
    sequences:
      LIVRO: ID
      AUTOR: ID
    # use aspas simples (') para forçar um candidato a número como string
    # password: '11111111'
    # use aspas simples (') para quotar strings que devem possuir aspas duplas no início e no fim
    # password: '"11111111"'
    # use aspas simples (") para quotar strings que devem possuir aspas simples no início e no fim
    # password: "'11111111'"
    # use '$' para não tratar o elemento seguinte como string, ou seja, não quotar a expressão
    # password: $newid()

sequences:
  LIVRO: {ID: SQ_ID_LIVRO}
  AUTOR: {ID: SQ_ID_AUTOR}

table:
  LIVRO:
    sequence:
      # SQ_ID_LIVRO: ID
      name: SQ_ID_LIVRO
      column: ID
  AUTOR:
    sequence:
      # SQ_ID_AUTOR: ID
      name: SQ_ID_AUTOR
      column: ID

load:
  inicial: [AUTOR, LIVRO]
  outra-carga:
    AUTOR: [default, segundo-autor, terceiro]
    LIVRO: [festa-no-ceu]
    AUTOR_LIVRO: [default, segundo-autor, terceiro]

verify:
  todos:
    # verifica se todas as tabelas informadas como parametro do count tem resultado igual ao informado
    count(AUTOR, LIVRO): 1
    # verifica se todas as tabelas não informadas como parametro do count tem resultado igual ao informado
    count~(AUTOR, LIVRO): 0
